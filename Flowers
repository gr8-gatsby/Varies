{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNyJysuxh7xkWMeAY4nqewk",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/gr8-gatsby/Varies/blob/main/Flowers\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from __future__ import absolute_import, division, print_function, unicode_literals\n",
        "import tensorflow as tf\n",
        "import pandas as pd\n",
        "\n",
        "CSV_COLUMN_NAMES = ['SepalLength', 'SepalWidth', 'PetalLength', 'PetalWidth', 'Species']\n",
        "SPECIES = ['Setosa', 'Versicolor', 'Virginica']\n",
        "\n",
        "# constants\n",
        "train_path = tf.keras.utils.get_file(\n",
        "    \"iris_training.csv\", \"https://storage.googleapis.com/download.tensorflow.org/data/iris_training.csv\")\n",
        "test_path = tf.keras.utils.get_file(\n",
        "    \"iris_test.csv\", \"https://storage.googleapis.com/download.tensorflow.org/data/iris_test.csv\")\n",
        "\n",
        "train = pd.read_csv(train_path, names=CSV_COLUMN_NAMES, header=0)\n",
        "test = pd.read_csv(test_path, names=CSV_COLUMN_NAMES, header=0)\n",
        "\n",
        "train_y = train.pop('Species')\n",
        "test_y = test.pop('Species')\n",
        "\n",
        "#print(train_y.head())\n",
        "#print(train.shape)\n",
        "\n",
        "# input function\n",
        "def input_fn(features, labels, training=True, batch_size=256):\n",
        "    # Converts the inputs to a Dataset\n",
        "    dataset = tf.data.Dataset.from_tensor_slices((dict(features), labels))\n",
        "\n",
        "    # Shuffle and repeat if you are in training mode\n",
        "    if training:\n",
        "        dataset = dataset.shuffle(1000).repeat()\n",
        "\n",
        "    return dataset.batch(batch_size)\n",
        "\n",
        "# Feature columns describe how to use the input\n",
        "my_feature_columns = []\n",
        "for key in train.keys():\n",
        "    my_feature_columns.append(tf.feature_column.numeric_column(key=key))\n",
        "\n",
        "#print(my_feature_columns)\n",
        "\n",
        "# Define a deep neural network classifier\n",
        "classifier = tf.estimator.DNNClassifier(\n",
        "    feature_columns=my_feature_columns,\n",
        "    # Two hidden layers of 30 and 10 nodes respectively\n",
        "    hidden_units=[30, 10],\n",
        "    # The model must choose between 3 classes.\n",
        "    n_classes=3)\n",
        "\n",
        "# Model training\n",
        "# We include a lambda to avoid creating an inner function previously\n",
        "classifier.train(input_fn=lambda: input_fn(train, train_y, training=True), steps=5000)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xm1ABzfPeg6N",
        "outputId": "7919a146-3a72-48e6-a98e-4cff434c7cbf"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "INFO:tensorflow:Using default config.\n",
            "WARNING:tensorflow:Using temporary folder as model directory: /tmp/tmpdihje84x\n",
            "INFO:tensorflow:Using config: {'_model_dir': '/tmp/tmpdihje84x', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': None, '_save_checkpoints_secs': 600, '_session_config': allow_soft_placement: true\n",
            "graph_options {\n",
            "  rewrite_options {\n",
            "    meta_optimizer_iterations: ONE\n",
            "  }\n",
            "}\n",
            ", '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': 100, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_session_creation_timeout_secs': 7200, '_checkpoint_save_graph_def': True, '_service': None, '_cluster_spec': ClusterSpec({}), '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1}\n",
            "INFO:tensorflow:Calling model_fn.\n",
            "INFO:tensorflow:Done calling model_fn.\n",
            "INFO:tensorflow:Create CheckpointSaverHook.\n",
            "INFO:tensorflow:Graph was finalized.\n",
            "INFO:tensorflow:Running local_init_op.\n",
            "INFO:tensorflow:Done running local_init_op.\n",
            "INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 0...\n",
            "INFO:tensorflow:Saving checkpoints for 0 into /tmp/tmpdihje84x/model.ckpt.\n",
            "INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 0...\n",
            "INFO:tensorflow:loss = 1.2381159, step = 0\n",
            "INFO:tensorflow:global_step/sec: 328.407\n",
            "INFO:tensorflow:loss = 0.85507536, step = 100 (0.307 sec)\n",
            "INFO:tensorflow:global_step/sec: 401.888\n",
            "INFO:tensorflow:loss = 0.7670692, step = 200 (0.248 sec)\n",
            "INFO:tensorflow:global_step/sec: 373.948\n",
            "INFO:tensorflow:loss = 0.71008295, step = 300 (0.271 sec)\n",
            "INFO:tensorflow:global_step/sec: 396.008\n",
            "INFO:tensorflow:loss = 0.6628595, step = 400 (0.252 sec)\n",
            "INFO:tensorflow:global_step/sec: 414.266\n",
            "INFO:tensorflow:loss = 0.640218, step = 500 (0.239 sec)\n",
            "INFO:tensorflow:global_step/sec: 393.272\n",
            "INFO:tensorflow:loss = 0.6035177, step = 600 (0.254 sec)\n",
            "INFO:tensorflow:global_step/sec: 396.901\n",
            "INFO:tensorflow:loss = 0.59577036, step = 700 (0.255 sec)\n",
            "INFO:tensorflow:global_step/sec: 382.158\n",
            "INFO:tensorflow:loss = 0.56762946, step = 800 (0.263 sec)\n",
            "INFO:tensorflow:global_step/sec: 412.125\n",
            "INFO:tensorflow:loss = 0.55334437, step = 900 (0.238 sec)\n",
            "INFO:tensorflow:global_step/sec: 417.64\n",
            "INFO:tensorflow:loss = 0.5399854, step = 1000 (0.239 sec)\n",
            "INFO:tensorflow:global_step/sec: 418.744\n",
            "INFO:tensorflow:loss = 0.5255277, step = 1100 (0.241 sec)\n",
            "INFO:tensorflow:global_step/sec: 389.794\n",
            "INFO:tensorflow:loss = 0.5140113, step = 1200 (0.261 sec)\n",
            "INFO:tensorflow:global_step/sec: 410.179\n",
            "INFO:tensorflow:loss = 0.50534785, step = 1300 (0.237 sec)\n",
            "INFO:tensorflow:global_step/sec: 387.736\n",
            "INFO:tensorflow:loss = 0.50155526, step = 1400 (0.262 sec)\n",
            "INFO:tensorflow:global_step/sec: 410.655\n",
            "INFO:tensorflow:loss = 0.48467824, step = 1500 (0.247 sec)\n",
            "INFO:tensorflow:global_step/sec: 398.443\n",
            "INFO:tensorflow:loss = 0.47106734, step = 1600 (0.246 sec)\n",
            "INFO:tensorflow:global_step/sec: 441.851\n",
            "INFO:tensorflow:loss = 0.47129914, step = 1700 (0.229 sec)\n",
            "INFO:tensorflow:global_step/sec: 406.228\n",
            "INFO:tensorflow:loss = 0.46868575, step = 1800 (0.242 sec)\n",
            "INFO:tensorflow:global_step/sec: 416.829\n",
            "INFO:tensorflow:loss = 0.4579904, step = 1900 (0.242 sec)\n",
            "INFO:tensorflow:global_step/sec: 398.17\n",
            "INFO:tensorflow:loss = 0.44655555, step = 2000 (0.250 sec)\n",
            "INFO:tensorflow:global_step/sec: 425.842\n",
            "INFO:tensorflow:loss = 0.44811553, step = 2100 (0.237 sec)\n",
            "INFO:tensorflow:global_step/sec: 403.635\n",
            "INFO:tensorflow:loss = 0.41628933, step = 2200 (0.248 sec)\n",
            "INFO:tensorflow:global_step/sec: 398.796\n",
            "INFO:tensorflow:loss = 0.4418116, step = 2300 (0.248 sec)\n",
            "INFO:tensorflow:global_step/sec: 389.408\n",
            "INFO:tensorflow:loss = 0.42784858, step = 2400 (0.262 sec)\n",
            "INFO:tensorflow:global_step/sec: 423.809\n",
            "INFO:tensorflow:loss = 0.41548103, step = 2500 (0.230 sec)\n",
            "INFO:tensorflow:global_step/sec: 414.117\n",
            "INFO:tensorflow:loss = 0.42273915, step = 2600 (0.245 sec)\n",
            "INFO:tensorflow:global_step/sec: 415.477\n",
            "INFO:tensorflow:loss = 0.41248652, step = 2700 (0.241 sec)\n",
            "INFO:tensorflow:global_step/sec: 393.573\n",
            "INFO:tensorflow:loss = 0.40562433, step = 2800 (0.251 sec)\n",
            "INFO:tensorflow:global_step/sec: 428.469\n",
            "INFO:tensorflow:loss = 0.39619988, step = 2900 (0.232 sec)\n",
            "INFO:tensorflow:global_step/sec: 429.148\n",
            "INFO:tensorflow:loss = 0.40047824, step = 3000 (0.236 sec)\n",
            "INFO:tensorflow:global_step/sec: 419.044\n",
            "INFO:tensorflow:loss = 0.4015013, step = 3100 (0.235 sec)\n",
            "INFO:tensorflow:global_step/sec: 438.954\n",
            "INFO:tensorflow:loss = 0.3935153, step = 3200 (0.232 sec)\n",
            "INFO:tensorflow:global_step/sec: 406.809\n",
            "INFO:tensorflow:loss = 0.39113045, step = 3300 (0.242 sec)\n",
            "INFO:tensorflow:global_step/sec: 443.473\n",
            "INFO:tensorflow:loss = 0.3806108, step = 3400 (0.229 sec)\n",
            "INFO:tensorflow:global_step/sec: 426.612\n",
            "INFO:tensorflow:loss = 0.3868843, step = 3500 (0.234 sec)\n",
            "INFO:tensorflow:global_step/sec: 436.772\n",
            "INFO:tensorflow:loss = 0.37123996, step = 3600 (0.226 sec)\n",
            "INFO:tensorflow:global_step/sec: 420.66\n",
            "INFO:tensorflow:loss = 0.35450408, step = 3700 (0.237 sec)\n",
            "INFO:tensorflow:global_step/sec: 400.305\n",
            "INFO:tensorflow:loss = 0.36800516, step = 3800 (0.250 sec)\n",
            "INFO:tensorflow:global_step/sec: 444.904\n",
            "INFO:tensorflow:loss = 0.36192238, step = 3900 (0.227 sec)\n",
            "INFO:tensorflow:global_step/sec: 469.696\n",
            "INFO:tensorflow:loss = 0.36109862, step = 4000 (0.211 sec)\n",
            "INFO:tensorflow:global_step/sec: 455.463\n",
            "INFO:tensorflow:loss = 0.3585398, step = 4100 (0.222 sec)\n",
            "INFO:tensorflow:global_step/sec: 435.893\n",
            "INFO:tensorflow:loss = 0.3555128, step = 4200 (0.229 sec)\n",
            "INFO:tensorflow:global_step/sec: 437.949\n",
            "INFO:tensorflow:loss = 0.34792447, step = 4300 (0.225 sec)\n",
            "INFO:tensorflow:global_step/sec: 434.27\n",
            "INFO:tensorflow:loss = 0.34714788, step = 4400 (0.231 sec)\n",
            "INFO:tensorflow:global_step/sec: 415.104\n",
            "INFO:tensorflow:loss = 0.3462597, step = 4500 (0.241 sec)\n",
            "INFO:tensorflow:global_step/sec: 389.285\n",
            "INFO:tensorflow:loss = 0.34574473, step = 4600 (0.260 sec)\n",
            "INFO:tensorflow:global_step/sec: 428.479\n",
            "INFO:tensorflow:loss = 0.332105, step = 4700 (0.236 sec)\n",
            "INFO:tensorflow:global_step/sec: 429.725\n",
            "INFO:tensorflow:loss = 0.33176726, step = 4800 (0.229 sec)\n",
            "INFO:tensorflow:global_step/sec: 423.289\n",
            "INFO:tensorflow:loss = 0.32358116, step = 4900 (0.236 sec)\n",
            "INFO:tensorflow:Calling checkpoint listeners before saving checkpoint 5000...\n",
            "INFO:tensorflow:Saving checkpoints for 5000 into /tmp/tmpdihje84x/model.ckpt.\n",
            "INFO:tensorflow:Calling checkpoint listeners after saving checkpoint 5000...\n",
            "INFO:tensorflow:Loss for final step: 0.32145688.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<tensorflow_estimator.python.estimator.canned.dnn.DNNClassifierV2 at 0x7f97dcb7c110>"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "eval_result = classifier.evaluate(input_fn=lambda: input_fn(test, test_y, training=False))\n",
        "print('\\nTest set accuracy: {accuracy:0.3f}\\n'.format(**eval_result))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0vJ2Ggwhex4U",
        "outputId": "f2f466a3-b816-41a2-ca1a-06a9a2b8f231"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "INFO:tensorflow:Calling model_fn.\n",
            "INFO:tensorflow:Done calling model_fn.\n",
            "INFO:tensorflow:Starting evaluation at 2022-07-07T11:49:15\n",
            "INFO:tensorflow:Graph was finalized.\n",
            "INFO:tensorflow:Restoring parameters from /tmp/tmpdihje84x/model.ckpt-5000\n",
            "INFO:tensorflow:Running local_init_op.\n",
            "INFO:tensorflow:Done running local_init_op.\n",
            "INFO:tensorflow:Inference Time : 0.29768s\n",
            "INFO:tensorflow:Finished evaluation at 2022-07-07-11:49:16\n",
            "INFO:tensorflow:Saving dict for global step 5000: accuracy = 0.93333334, average_loss = 0.37719077, global_step = 5000, loss = 0.37719077\n",
            "INFO:tensorflow:Saving 'checkpoint_path' summary for global step 5000: /tmp/tmpdihje84x/model.ckpt-5000\n",
            "\n",
            "Test set accuracy: 0.933\n",
            "\n"
          ]
        }
      ]
    }
  ]
}